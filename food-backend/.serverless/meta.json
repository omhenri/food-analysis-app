{
  "/Users/omhenry/Desktop/Projects/kiro/food-backend/serverless.yml": {
    "versionFramework": "4.19.1",
    "servicePath": "/Users/omhenry/Desktop/Projects/kiro/food-backend/serverless.yml",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "rejuvenai-flask-backend",
      "provider": {
        "name": "aws",
        "runtime": "python3.10",
        "stage": "dev",
        "region": "us-east-1",
        "architecture": "arm64",
        "profile": "rejuvenai",
        "iam": {
          "role": {
            "statements": [
              {
                "Effect": "Allow",
                "Action": [
                  "logs:CreateLogGroup",
                  "logs:CreateLogStream",
                  "logs:PutLogEvents"
                ],
                "Resource": "*"
              },
              {
                "Effect": "Allow",
                "Action": [
                  "dynamodb:GetItem",
                  "dynamodb:PutItem",
                  "dynamodb:UpdateItem",
                  "dynamodb:Query",
                  "dynamodb:Scan"
                ],
                "Resource": [
                  "arn:aws:dynamodb:us-east-1:829241815320:table/food-analysis-jobs",
                  "arn:aws:dynamodb:us-east-1:829241815320:table/food-analysis-jobs/index/*"
                ]
              },
              {
                "Effect": "Allow",
                "Action": [
                  "sqs:SendMessage",
                  "sqs:ReceiveMessage",
                  "sqs:DeleteMessage",
                  "sqs:GetQueueAttributes"
                ],
                "Resource": "arn:aws:sqs:us-east-1:829241815320:food-analysis-jobs-queue"
              }
            ]
          }
        },
        "environment": {
          "FLASK_ENV": "development",
          "SECRET_KEY": "<REDACTED>",
          "OPENROUTER_API_KEY": "<REDACTED>",
          "OPENROUTER_MODEL": "x-ai/grok-4-fast:free",
          "MAX_REQUESTS_PER_MINUTE": "10",
          "LOG_LEVEL": "INFO",
          "LOG_FILE": "app.log",
          "PORT": "8000",
          "HOST": "0.0.0.0"
        },
        "timeout": 300,
        "memorySize": 1024,
        "versionFunctions": true
      },
      "functions": {
        "api": {
          "handler": "handler.handler",
          "timeout": 30,
          "events": [
            {
              "httpApi": {
                "path": "/{proxy+}",
                "method": "*"
              },
              "resolvedMethod": "ANY",
              "resolvedPath": "/{proxy+}"
            }
          ],
          "environment": {
            "FLASK_ENV": "dev"
          },
          "name": "rejuvenai-flask-backend-dev-api"
        },
        "processFoodAnalysis": {
          "handler": "async_handler.process_food_analysis",
          "timeout": 300,
          "events": [
            {
              "sqs": {
                "arn": {
                  "Fn::GetAtt": [
                    "FoodAnalysisJobsQueue",
                    "Arn"
                  ]
                },
                "batchSize": 1
              }
            }
          ],
          "environment": {
            "FLASK_ENV": "dev",
            "DYNAMODB_TABLE": "food-analysis-jobs"
          },
          "name": "rejuvenai-flask-backend-dev-processFoodAnalysis"
        }
      },
      "plugins": [
        "serverless-python-requirements",
        "serverless-dotenv-plugin"
      ],
      "custom": {
        "pythonRequirements": {
          "dockerizePip": true,
          "pythonBin": "python3",
          "useDownloadCache": true,
          "useStaticCache": true,
          "slim": true,
          "strip": false,
          "noDeploy": [
            "pytest",
            "pytest-cov",
            "coverage"
          ]
        }
      },
      "package": {
        "patterns": [
          "!.git/**",
          "!.gitignore",
          "!README.md",
          "!venv/**",
          "!__pycache__/**",
          "!.pytest_cache/**",
          "!tests/**",
          "!*.pyc",
          "!.env",
          "!serverless.yml",
          "!serverless.json",
          "!deploy-to-aws.sh",
          "!debug-lambda.sh",
          "!create-aws-user.sh",
          "!AWS_DEPLOYMENT_GUIDE.md",
          "!OPENROUTER_SETUP.md",
          "!switch_to_openrouter.py",
          "!response.json",
          "!test-deployment.zip",
          "!test.zip",
          "!app.log"
        ],
        "artifactsS3KeyDirname": "serverless/rejuvenai-flask-backend/dev/code-artifacts"
      },
      "resources": {
        "Resources": {
          "FoodAnalysisJobsTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "food-analysis-jobs",
              "AttributeDefinitions": [
                {
                  "AttributeName": "job_id",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "status",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "created_at",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "job_id",
                  "KeyType": "HASH"
                }
              ],
              "GlobalSecondaryIndexes": [
                {
                  "IndexName": "status-created_at-index",
                  "KeySchema": [
                    {
                      "AttributeName": "status",
                      "KeyType": "HASH"
                    },
                    {
                      "AttributeName": "created_at",
                      "KeyType": "RANGE"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          },
          "FoodAnalysisJobsQueue": {
            "Type": "AWS::SQS::Queue",
            "Properties": {
              "QueueName": "food-analysis-jobs-queue",
              "VisibilityTimeout": 360,
              "MessageRetentionPeriod": 86400
            }
          }
        }
      }
    },
    "provider": {
      "name": "aws",
      "runtime": "python3.10",
      "stage": "dev",
      "region": "us-east-1",
      "architecture": "arm64",
      "profile": "rejuvenai",
      "iam": {
        "role": {
          "statements": [
            {
              "Effect": "Allow",
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:GetItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:Query",
                "dynamodb:Scan"
              ],
              "Resource": [
                "arn:aws:dynamodb:us-east-1:829241815320:table/food-analysis-jobs",
                "arn:aws:dynamodb:us-east-1:829241815320:table/food-analysis-jobs/index/*"
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "sqs:SendMessage",
                "sqs:ReceiveMessage",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes"
              ],
              "Resource": "arn:aws:sqs:us-east-1:829241815320:food-analysis-jobs-queue"
            }
          ]
        }
      },
      "environment": {
        "FLASK_ENV": "development",
        "SECRET_KEY": "<REDACTED>",
        "OPENROUTER_API_KEY": "<REDACTED>",
        "OPENROUTER_MODEL": "x-ai/grok-4-fast:free",
        "MAX_REQUESTS_PER_MINUTE": "10",
        "LOG_LEVEL": "INFO",
        "LOG_FILE": "app.log",
        "PORT": "8000",
        "HOST": "0.0.0.0"
      },
      "timeout": 300,
      "memorySize": 1024,
      "versionFunctions": true
    },
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "serviceRawFile": "service: rejuvenai-flask-backend\n\nprovider:\n  name: aws\n  runtime: python3.10\n  stage: ${opt:stage, 'dev'}\n  region: ${opt:region, 'us-east-1'}\n  architecture: arm64\n  profile: rejuvenai\n\n  # IAM role configuration\n  iam:\n    role:\n      statements:\n        - Effect: Allow\n          Action:\n            - logs:CreateLogGroup\n            - logs:CreateLogStream\n            - logs:PutLogEvents\n          Resource: \"*\"\n        - Effect: Allow\n          Action:\n            - dynamodb:GetItem\n            - dynamodb:PutItem\n            - dynamodb:UpdateItem\n            - dynamodb:Query\n            - dynamodb:Scan\n          Resource:\n            - \"arn:aws:dynamodb:${self:provider.region}:${aws:accountId}:table/food-analysis-jobs\"\n            - \"arn:aws:dynamodb:${self:provider.region}:${aws:accountId}:table/food-analysis-jobs/index/*\"\n        - Effect: Allow\n          Action:\n            - sqs:SendMessage\n            - sqs:ReceiveMessage\n            - sqs:DeleteMessage\n            - sqs:GetQueueAttributes\n          Resource:\n            - \"arn:aws:sqs:${self:provider.region}:${aws:accountId}:food-analysis-jobs-queue\"\n\n  # Environment variables\n  environment:\n    FLASK_ENV: ${self:provider.stage}\n    SECRET_KEY: ${env:SECRET_KEY, 'dev-secret-key-change-in-production'}\n    OPENROUTER_API_KEY: ${env:OPENROUTER_API_KEY, ''}\n    OPENROUTER_MODEL: ${env:OPENROUTER_MODEL, 'anthropic/claude-3-haiku'}\n    MAX_REQUESTS_PER_MINUTE: ${env:MAX_REQUESTS_PER_MINUTE, '10'}\n\n  # Lambda function configuration\n  timeout: 300  # 5 minutes for AI processing\n  memorySize: 1024  # 1GB RAM\n\nfunctions:\n  api:\n    handler: handler.handler\n    timeout: 30   # API Gateway max timeout\n    events:\n      - httpApi:\n          path: '/{proxy+}'\n          method: '*'\n    environment:\n      FLASK_ENV: ${self:provider.stage}\n\n  # Asynchronous food analysis processor\n  processFoodAnalysis:\n    handler: async_handler.process_food_analysis\n    timeout: 300   # 5 minutes for async processing\n    events:\n      - sqs:\n          arn:\n            Fn::GetAtt: [FoodAnalysisJobsQueue, Arn]\n          batchSize: 1\n    environment:\n      FLASK_ENV: ${self:provider.stage}\n      DYNAMODB_TABLE: food-analysis-jobs\n\nplugins:\n  - serverless-python-requirements\n  - serverless-dotenv-plugin\n\ncustom:\n  pythonRequirements:\n    dockerizePip: true\n    pythonBin: python3\n    useDownloadCache: true\n    useStaticCache: true\n    slim: true\n    strip: false\n    noDeploy:\n      - pytest\n      - pytest-cov\n      - coverage\n\npackage:\n  patterns:\n    - '!.git/**'\n    - '!.gitignore'\n    - '!README.md'\n    - '!venv/**'\n    - '!__pycache__/**'\n    - '!.pytest_cache/**'\n    - '!tests/**'\n    - '!*.pyc'\n    - '!.env'\n    - '!serverless.yml'\n    - '!serverless.json'\n    - '!deploy-to-aws.sh'\n    - '!debug-lambda.sh'\n    - '!create-aws-user.sh'\n    - '!AWS_DEPLOYMENT_GUIDE.md'\n    - '!OPENROUTER_SETUP.md'\n    - '!switch_to_openrouter.py'\n    - '!response.json'\n    - '!test-deployment.zip'\n    - '!test.zip'\n    - '!app.log'\n\nresources:\n  Resources:\n    FoodAnalysisJobsTable:\n      Type: AWS::DynamoDB::Table\n      Properties:\n        TableName: food-analysis-jobs\n        AttributeDefinitions:\n          - AttributeName: job_id\n            AttributeType: S\n          - AttributeName: status\n            AttributeType: S\n          - AttributeName: created_at\n            AttributeType: S\n        KeySchema:\n          - AttributeName: job_id\n            KeyType: HASH\n        GlobalSecondaryIndexes:\n          - IndexName: status-created_at-index\n            KeySchema:\n              - AttributeName: status\n                KeyType: HASH\n              - AttributeName: created_at\n                KeyType: RANGE\n            Projection:\n              ProjectionType: ALL\n        BillingMode: PAY_PER_REQUEST\n\n    FoodAnalysisJobsQueue:\n      Type: AWS::SQS::Queue\n      Properties:\n        QueueName: food-analysis-jobs-queue\n        VisibilityTimeout: 360  # 6 minutes (longer than Lambda timeout)\n        MessageRetentionPeriod: 86400  # 24 hours\n\n# Custom domains (optional)\n# customDomain:\n#   domainName: api.rejuvenai.com\n#   basePath: ''\n#   stage: ${self:provider.stage}\n#   createRoute53Record: true\n",
    "command": [
      "info"
    ],
    "options": {
      "stage": "dev",
      "region": "us-east-1"
    },
    "orgId": "0a3685d5-dace-428e-9674-9faa52c7a5fb",
    "orgName": "hanri",
    "userId": "b7LlMR7c6GhQx5BY5T",
    "userName": "hanri",
    "serviceProviderAwsAccountId": "829241815320",
    "serviceProviderAwsCfStackName": "rejuvenai-flask-backend-dev",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-1:829241815320:stack/rejuvenai-flask-backend-dev/67b4d590-9d34-11f0-81a2-0affdbff7db9",
    "serviceProviderAwsCfStackCreated": "2025-09-29T13:01:25.370Z",
    "serviceProviderAwsCfStackUpdated": "2025-09-29T14:42:36.621Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "ProcessFoodAnalysisLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:829241815320:function:rejuvenai-flask-backend-dev-processFoodAnalysis:8",
        "Description": "Current Lambda function version",
        "ExportName": "sls-rejuvenai-flask-backend-dev-ProcessFoodAnalysisLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ApiLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:829241815320:function:rejuvenai-flask-backend-dev-api:9",
        "Description": "Current Lambda function version",
        "ExportName": "sls-rejuvenai-flask-backend-dev-ApiLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "HttpApiId",
        "OutputValue": "b0n6yk30hl",
        "Description": "Id of the HTTP API",
        "ExportName": "sls-rejuvenai-flask-backend-dev-HttpApiId"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-us-east-1-81db8e46-7146",
        "ExportName": "sls-rejuvenai-flask-backend-dev-ServerlessDeploymentBucketName"
      },
      {
        "OutputKey": "HttpApiUrl",
        "OutputValue": "https://b0n6yk30hl.execute-api.us-east-1.amazonaws.com",
        "Description": "URL of the HTTP API",
        "ExportName": "sls-rejuvenai-flask-backend-dev-HttpApiUrl"
      }
    ]
  }
}